(function () {
	var lang = document.getElementsByTagName("html")[0].getAttribute("lang");
	if (lang !== 'en')
		tinymce.PluginManager.requireLangPack('xhplugincall', lang + ',de');
	tinymce.PluginManager.add('xhplugincall', function (editor, url) {
		editor.settings.content_css += ', ' + url + '/style.css';
		editor.addButton('xhplugincall', {
			text: false,
			icon: false,
			image: url + '/xhplugincall.svg',
			tooltip: 'Insert a XH plugin call',
			onclick: function () {
				var initial = editor.selection.getContent().match(/\{{3}(.*)\}{3}/);
				var inline = /^<span/.test(editor.selection.getContent());
				editor.windowManager.open({
					title: 'Insert/edit a XH plugin call',
					body: [{
							type: 'container',
							minWidth: 450,
							layout: 'flow',
							items: [{
									type: 'label',
									text: 'Insert/edit the XH plugin call here - without {{{}}}',
									style: 'display:block;margin-bottom:1em;'
								}, {
									type: 'textbox',
									name: 'title',
									style: 'width:97%',
									value: initial ? initial[1] : ""
								}
							]
						}, {
							type: 'checkbox',
							name: 'inline',
							label: 'Insert as <span> (default = <div>)',
							checked: inline
						}
					],
					onsubmit: function (e) {
						var tagname = e.data.inline ? 'span' : 'div';
						if (e.data.title.length) {
							editor.insertContent('<' + tagname + ' class="xhplugincall mceNonEditable">{{{' + e.data.title + '}}}</' + tagname + '>');
						} else
							editor.insertContent('');
					}
				});
			}
		});
	});
})();
